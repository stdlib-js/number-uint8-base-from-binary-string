{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string-format' );\nvar pow = require( '@stdlib/math-base-special-pow' );\n\n\n// VARIABLES //\n\nvar NBITS = 8;\n\n\n// MAIN //\n\n/**\n* Creates an unsigned 8-bit integer from a literal bit representation.\n*\n* @param {BinaryString} bstr - string which is a literal bit representation\n* @throws {Error} must provide a string with a length equal to `8`\n* @returns {uinteger8} unsigned 8-bit integer\n*\n* @example\n* var bstr = '01010101';\n* var val = fromBinaryStringUint8( bstr );\n* // returns 85\n*\n* @example\n* var bstr = '00000000';\n* var val = fromBinaryStringUint8( bstr );\n* // returns 0\n*\n* @example\n* var bstr = '00000010';\n* var val = fromBinaryStringUint8( bstr );\n* // returns 2\n*\n* @example\n* var bstr = '11111111';\n* var val = fromBinaryStringUint8( bstr );\n* // returns 255\n*/\nfunction fromBinaryStringUint8( bstr ) {\n\tvar sum;\n\tvar i;\n\tif ( bstr.length !== NBITS ) {\n\t\tthrow new Error( format( 'invalid argument. Input string must have a length equal to %u. Value: `%s`.', NBITS, bstr ) );\n\t}\n\tsum = 0;\n\tfor ( i = 0; i < bstr.length; i++ ) {\n\t\tif ( bstr[ i ] === '1' ) {\n\t\t\tsum += pow( 2, (NBITS-i-1) );\n\t\t}\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromBinaryStringUint8;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an unsigned 8-bit integer from a literal bit representation.\n*\n* @module @stdlib/number-uint8-base-from-binary-string\n*\n* @example\n* var fromBinaryStringUint8 = require( '@stdlib/number-uint8-base-from-binary-string' );\n*\n* var bstr = '01010101';\n* var val = fromBinaryStringUint8( bstr );\n* // returns 85\n*\n* bstr = '00000000';\n* val = fromBinaryStringUint8( bstr );\n* // returns 0\n*\n* bstr = '00000010';\n* val = fromBinaryStringUint8( bstr );\n* // returns 2\n*\n* bstr = '11111111';\n* val = fromBinaryStringUint8( bstr );\n* // returns 255\n*/\n\n// MODULES //\n\nvar fromBinaryStringUint8 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = fromBinaryStringUint8;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAS,QAAS,uBAAwB,EAC1CC,EAAM,QAAS,+BAAgC,EAK/CC,EAAQ,EAgCZ,SAASC,EAAuBC,EAAO,CACtC,IAAIC,EACAC,EACJ,GAAKF,EAAK,SAAWF,EACpB,MAAM,IAAI,MAAOF,EAAQ,8EAA+EE,EAAOE,CAAK,CAAE,EAGvH,IADAC,EAAM,EACAC,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IACxBF,EAAME,CAAE,IAAM,MAClBD,GAAOJ,EAAK,EAAIC,EAAMI,EAAE,CAAG,GAG7B,OAAOD,CACR,CAKAN,EAAO,QAAUI,IC/BjB,IAAII,EAAwB,IAK5B,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "format", "pow", "NBITS", "fromBinaryStringUint8", "bstr", "sum", "i", "fromBinaryStringUint8"]
}
